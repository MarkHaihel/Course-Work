@*@using PAIS.Filters;*@

@model IEnumerable<IdentityUser>
@addTagHelper "*, PAIS"
@{
    ViewData["Title"] = "Список Користувачів";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject IBlockedUserRepository blockedUserRepository


<h2 class="p-1">Список користувачів</h2>
<hr />
<form method="get">
    <div class="d-flex">
        <div class="col-lg-6 mt-5">
            <div class="col-lg-11 p-0">
                @*@Html.TextBox("searchReq", Model.UsersFilterVM.SearchReq, htmlAttributes: new { @class = "form-control border-primary w-100 h1 my-0 form-control-lg", @placeholder = "Search book" })*@
            </div>
            <div class="col-lg-1 p-0">
                <button type="submit" class="btn btn-primary my-0 form-control-lg"><i class="fas fa-search"></i></button>
            </div>
        </div>
    </div>
</form>
<table class="table mt-5">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th>
                <sort-header action="Index"
                             @*up="@Model.UsersSortVM.Up"
                             current="@Model.UsersSortVM.Current"
                             property="@Model.UsersSortVM.LoginNameSort"
                             page-url-searchReq="@(Model.UsersFilterVM.SearchReq)"*@>
                    Логін
                </sort-header>

            </th>
            <th>
                <sort-header action="Index"
                             @*up="@Model.UsersSortVM.Up"
                             current="@Model.UsersSortVM.Current"
                             property="@Model.UsersSortVM.EmailSort"
                             page-url-searchReq="@(Model.UsersFilterVM.SearchReq)"*@>
                    Email
                </sort-header>

            </th>
            <th scope="col">Роль</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @{ int i = 0;}
        @foreach (var user in Model)
        {
            bool isBlocked = blockedUserRepository.BlockedUsers.Where(b => b.UserId == user.Id).Any();
            i++;
            <tr>
                <th scope="row">@i</th>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    @if ((await UserManager.GetRolesAsync(user)).Count == 1)
                    {
                        foreach (var role in (await UserManager.GetRolesAsync(user)).ToList().First())
                        {
                            @role.ToString()
                        }
                    }
                </td>

                <td class="d-flex justify-content-end">
                    @if ((await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "shop admin")) && (await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "user admin")))
                    {
                        if (!(await UserManager.IsInRoleAsync(user, "user admin")) || !(await UserManager.IsInRoleAsync(user, "shop admin")))
                        {
                            <form asp-action="DeleteUser" asp-route-id="@user.Id" method="post">
                                @if (isBlocked)
                                {
                                    <a class="btn btn-sm btn-success" asp-action="UnblockUser" asp-controller="UsersAdmin" asp-route-UserId="@user.Id">Unblock</a>
                                }
                                <a class="btn btn-sm btn-primary" asp-action="EditUser" asp-route-id="@user.Id">Редагувати</a>
                                <a class="btn btn-sm btn-warning" asp-action="EditUserRoles" asp-route-userid="@user.Id">Права доступу</a>
                                <button type="submit" class="btn btn-sm btn-danger">Видалити</button>
                            </form>
                        }
                    }
                    else if (!(await UserManager.IsInRoleAsync(user, "user admin")))
                    {
                        <form asp-action="DeleteUser" asp-route-id="@user.Id" method="post">
                            <a class="btn btn-sm btn-primary" asp-action="EditUser" asp-route-id="@user.Id">Редагувати</a>
                            <a class="btn btn-sm btn-warning" asp-action="EditUserRoles" asp-route-userid="@user.Id">Права доступу</a>
                            <button type="submit" class="btn btn-sm btn-danger">Видалити</button>
                            @if (isBlocked)
                            {
                                <a class="btn btn-sm btn-success" asp-action="UnblockUser" asp-controller="UsersAdmin" asp-route-UserId="@user.Id">Розблокувати</a>
                            }
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<page-link page-model="Model.UsersPageVM"
           page-action="Index"
           @*page-url-searchReq="@(Model.UsersFilterVM.SearchReq)"
           page-url-sortOrder="@(Model.UsersSortVM.Current)"*@>
</page-link>
