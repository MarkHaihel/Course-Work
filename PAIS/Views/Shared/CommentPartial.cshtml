@inject ICommentRepository commentRepository
@inject UserManager<IdentityUser> userManager
@inject SignInManager<IdentityUser> signInManager

@model Comment

    <div class="row p-1">
        @if ((signInManager.IsSignedIn(User)) && ((await userManager.GetUserAsync(User)).Id == Model.OwnerId))
        {
            <div class="col-lg-12 row m-0">
                <p class="m-0 p-0 col-lg-12">
                    <b><ins style="color:dodgerblue">You</ins></b>  <em style="color:dimgrey">@Model.Time</em>
                </p>

                <div class="col-lg-10 p-0">
                    <form asp-action="EditComment" asp-controller="Home" method="post">
                        <div class="form-group">
                            <input type="hidden" asp-for="CommentId" value="@Model.CommentId" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" asp-for="OwnerId" value="@((await userManager.GetUserAsync(User)).Id)" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" asp-for="BookId" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" asp-for="Time" value="@Model.Time" />
                        </div>
                        <div class="form-group">
                            <textarea class="form-control" name="text">@Model.Text</textarea>
                        </div>
                        <div class="form-group m-0">
                            <input type="submit" value="Edit" class="btn btn-success" />
                        </div>
                    </form>
                </div>
                <div class="col-lg-2">
                    <form asp-action="DeleteComment" asp-controller="Home" method="post">
                        <div class="form-group">
                            <input type="hidden" asp-for="CommentId" value="@Model.CommentId" />
                        </div>
                        <div class="form-group">
                            <input type="hidden" asp-for="BookId" value="@Model.BookId" />
                        </div>
                        <div class="form-group">
                            <input type="submit" class="btn btn-danger" value="Видалити" />
                        </div>
                    </form>
                </div>
            </div>
        }
        else if ((signInManager.IsSignedIn(User)) &&
            (await userManager.IsInRoleAsync((await userManager.GetUserAsync(User)), "user admin")) &&
            !(await userManager.IsInRoleAsync((await userManager.GetUserAsync(User)), "shop admin")))
        {

            @if ((await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "user admin")) &&
                (await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "shop admin")))
            {
                <div class="col-lg-11">
                    <p><ins style="color:black">@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins>  <em style="color:dimgrey">@Model.Time</em></p>
                    <p class="h5 text-secondary border px-3 py-2 rounded">@Model.Text</p>
                </div>
            }   
            else if ((await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "user admin")))
            {
                <div class="col-lg-11">
                    <p style="color:firebrick">
                        <ins style="color:black">@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> User admin  <em style="color:dimgrey">@Model.Time</em>
                    </p>
                    <div class="form-group">
                        <p class="h5 text-secondary border px-3 py-2 rounded">@Model.Text</p>
                    </div>
                </div>
            }
            else
            {
                <div class="col-lg-12">
                    @if ((await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "shop admin")))
                    {
                        <p style="color: seagreen">
                            <ins style="color:black">@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> Shop admin <em style="color:dimgrey">@Model.Time</em>
                        </p>

                    }
                    else
                    {
                        <p style="color:dimgrey"><ins>@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> <em>@Model.Time</em></p>
                    }
                    <div class="col-lg-10">
                        <p class="h5 text-secondary border px-3 py-2 rounded">@Model.Text</p>
                    </div>
                    <div class="col-lg-2">
                        <form asp-action="DeleteComment" asp-controller="Home" method="post">
                            <div class="form-group">
                                <input type="hidden" asp-for="CommentId" value="@Model.CommentId" />
                            </div>
                            <div class="form-group">
                                <input type="hidden" asp-for="BookId" value="@Model.BookId" />
                            </div>
                            <div class="form-group">
                                <input type="submit" class="btn btn-danger" value="Видалити" />
                            </div>
                        </form>
                    </div>
                    <div class="col-lg-2">
                        <a class="btn btn-sm btn-warning" asp-action="BlockUser" asp-controller="UsersAdmin" asp-route-UserId="@Model.OwnerId" asp-route-BookId="@Model.BookId">Заблокув.</a>
                    </div>
                </div>
            }
        }
        else if ((signInManager.IsSignedIn(User)) &&
        (await userManager.IsInRoleAsync((await userManager.GetUserAsync(User)), "user admin")) &&
        (await userManager.IsInRoleAsync((await userManager.GetUserAsync(User)), "shop admin")))
        {

    <div class="col-lg-12 row m-0">
        
        <div class="col-lg-12 p-0">
            @if ((await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "user admin")))
            {
                <p style="color: firebrick">
                    <ins style="color:black">@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> User admin <em style="color:dimgrey">@Model.Time</em>
                </p>
            }
            else if ((await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "shop admin")))
            {
                <p style="color: seagreen">
                    <ins style="color:black">@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> Shop admin <em style="color:dimgrey">@Model.Time</em>
                </p>
            }
            else
            {
                <p style="color:dimgrey"><ins>@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> <em>@Model.Time</em></p>
            }
        </div>
        <div class="col-lg-10 p-0">
            <p class="h5 text-secondary border px-3 py-2 rounded">@Model.Text</p>
        </div>
        <div class="col-lg-2">
            <form asp-action="DeleteComment" style="margin-top: 0px;" asp-controller="Home" method="post">
                <div class="form-group">
                    <input type="hidden" asp-for="CommentId" value="@Model.CommentId" />
                </div>
                <div class="form-group">
                    <input type="hidden" asp-for="BookId" value="@Model.BookId" />
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-danger" value="Видалити" />
                </div>
            </form>
        </div>
        <a class="btn btn-warning" asp-action="BlockUser" asp-controller="UsersAdmin" asp-route-UserId="@Model.OwnerId" asp-route-BookId="@Model.BookId">Заблокувати</a>
    </div>

        }
        else
        {
            @if ((await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "user admin")) ||
         (await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "shop admin")) ||
         (await userManager.IsInRoleAsync((userManager.Users.First(u => u.Id == Model.OwnerId)), "news admin")))
            {
                <div class="col-lg-12">
                    <p style="color: red"><ins style="color:black">@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> Адміністратор <em style="color:dimgrey">@Model.Time</em></p>
                </div>
            }
            else
            {
                <div class="col-lg-12">
                    <p style="color:dimgrey"><ins>@((userManager.Users.First(u => u.Id == Model.OwnerId)).UserName)</ins> <em>@Model.Time</em></p>
                </div>
            }
            <div class="col-lg-12">
                <p class="h5 text-secondary border px-3 py-2 rounded">@Model.Text</p>
            </div>
        }

    </div>